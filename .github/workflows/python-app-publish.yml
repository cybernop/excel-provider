name: PYPI
on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel poetry
      - name: Set package version
        run: |
          poetry version ${{github.ref_name}}
      - name: Build package
        run: |
          poetry build
      - name: Upload packages
        uses: actions/upload-artifact@v4
        with:
          name: python_packages
          path: dist/*
          retention-days: 1
          overwrite: true

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel pytest
      - name: Download packages from 'build' step
        uses: actions/download-artifact@v4
        with:
          name: python_packages
          path: dist
      - name: Install package
        run: |
          python -m pip install dist/*.whl
      - name: Test package
        run: |
          pip install pytest pytest-cov
          pytest --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
  publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel poetry
      - name: Configure credentials
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
      - name: Set package version
        run: |
          poetry version ${{github.ref_name}}
      - name: Download packages from 'build' step
        uses: actions/download-artifact@v4
        with:
          name: python_packages
          path: dist
      - name: Publish to PyPI
        run: |
          poetry publish
